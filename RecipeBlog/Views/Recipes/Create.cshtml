
@model RecipeBlog.Models.Recipe
@using RecipeBlog.Helpers

@{
    ViewBag.Title = "New Recipe";
}

<h2>New Recipe</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @ViewBag.ErrorText
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Blurb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Blurb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Blurb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrepTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrepTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrepTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea cols="20" class="htmleditor" id="Ingredients" name="Ingredients" rows="2">@if (!ViewBag.NewCreate) { @Html.Raw(Model.Ingredients) }</textarea>
                @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuickInstructions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea cols="20" class="htmleditor" id="QuickInstructions" name="QuickInstructions" rows="2">@if (!ViewBag.NewCreate) { @Html.Raw(Model.QuickInstructions) }</textarea>
                @Html.ValidationMessageFor(model => model.QuickInstructions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullInstructions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea cols="20" class="htmleditor" id="FullInstructions" name="FullInstructions" rows="2">@if (!ViewBag.NewCreate) { @Html.Raw(Model.FullInstructions) }</textarea>
                @Html.ValidationMessageFor(model => model.FullInstructions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check">
                    @Html.CheckBoxFor(model => model.Published, htmlAttributes: new { @class = "form-check-input position-static" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control date-control" } })
            </div>
        </div>

       <div class="form-group">
                @Html.LabelFor(model => model.SelectedCategories, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (!ViewBag.NewCreate)
                    {
                        @CustomHelpers.CategoryCheckBoxList(ViewBag.AllCategories, Model.SelectedCategories, ViewBag.NewCreate)
                    }
                    else
                    {
                        @CustomHelpers.CategoryCheckBoxList(ViewBag.AllCategories, null, ViewBag.NewCreate)
                    }

                </div>
            </div>
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>

                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
